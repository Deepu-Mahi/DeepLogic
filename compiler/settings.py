"""
Django settings for compiler project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

"""
Django settings for compiler project.
"""

from dotenv import load_dotenv
load_dotenv()

import os
from pathlib import Path
import dj_database_url
import logging

# Load API key and environment variables
GEMINI_API_KEY = os.getenv('GEMINI_API_KEY')

# Build paths inside the project
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-je43@(0vvzx^usnzg+@$9oqg+sj9ennac6-kr(92&o7wtn9lf4"

# ✅ Set DEBUG as needed (True for local testing)
DEBUG = False

ALLOWED_HOSTS = [
    '43.204.142.249',
    '127.0.0.1',
    '13.204.17.221',
    'localhost',
    'deeplogic.me',
    'www.deeplogic.me',
]

# ✅ CSRF Trusted Origins
CSRF_TRUSTED_ORIGINS = [
    'https://deeplogic.me',
    'https://www.deeplogic.me',
]

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "inputs",
    "outputs",
    "codes",
    "submit",
    "accounts",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",  # ✅ Added for static files
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "compiler.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "compiler.wsgi.application"

# Database config using DATABASE_URL
DATABASES = {
    'default': dj_database_url.parse(
        os.getenv("DATABASE_URL"),
        conn_max_age=600
    )
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# Internationalization
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Asia/Kolkata"
USE_I18N = True
USE_TZ = True

# ✅ Static files configuration (works for local and prod)
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # For production
#STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]  # For development

# Enable WhiteNoise for static file compression (optional but recommended)
#STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"

# Default primary key field type
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Authentication
LOGIN_URL = '/auth/login/'
LOGIN_REDIRECT_URL = '/submit/profile/'
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# ✅ Secure cookies for HTTPS
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# ✅ Email config
EMAIL_BACKEND = os.getenv("EMAIL_BACKEND", "django.core.mail.backends.smtp.EmailBackend")
EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = int(os.getenv("EMAIL_PORT", 587))
EMAIL_USE_TLS = os.getenv("EMAIL_USE_TLS", "True") == "True"
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# ✅ Logging
logging.basicConfig(level=logging.DEBUG)

# ✅ Sessions
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
